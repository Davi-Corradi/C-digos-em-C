Classe Funcionario






using System;
using System.Collections.Generic;

namespace ConsoleApp
{
    internal class Funcionario
    {
        public static List<Funcionario> Funcionarios = new List<Funcionario>();

        private int Matricula;
        private string Nome;
        private string cargoAtual;
        private float salarioAtual;

        // Getters estilo Java
        public int getMatricula() { return Matricula; }
        public string getNome() { return Nome; }
        public string getCargoAtual() { return cargoAtual; }
        public float getSalarioAtual() { return salarioAtual; }

        // Construtor
        public Funcionario(int matricula, string nome, string cargoAtual, float salarioAtual)
        {
            this.Matricula = matricula;
            this.Nome = nome;
            this.cargoAtual = cargoAtual;
            this.salarioAtual = salarioAtual;
        }

        // Cadastrar funcionário
        public static bool cadastrar(Funcionario f)
        {
            foreach (var func in Funcionarios)
            {
                if (func.Matricula == f.Matricula)
                {
                    Console.WriteLine($"\nFuncionário com matrícula {f.Matricula} já cadastrado!");
                    return false;
                }
            }
            Funcionarios.Add(f);
            return true;
        }

        // Listar todos
        public static void listar()
        {
            Console.WriteLine("\nLista de funcionários cadastrados: \n");

            foreach (var f in Funcionarios)
            {
                Console.WriteLine($"Nome: {f.getNome()} \nMatrícula: {f.getMatricula()} \nCargo: {f.getCargoAtual()} \nSalário: R$ {f.getSalarioAtual()}");
                Console.WriteLine("------------------------------------");
            }
        }

        // Consultar funcionário por matrícula (interação com usuário)
        public static void consultar()
        {
            Console.Write("\nDigite a matrícula do funcionário que deseja consultar: ");
            int matricula = int.Parse(Console.ReadLine());

            Funcionario encontrado = null;

            foreach (var f in Funcionarios)
            {
                if (f.Matricula == matricula)
                {
                    encontrado = f;
                    break;
                }
            }

            if (encontrado != null)
            {
                Console.WriteLine($"\nFuncionário encontrado!");
                Console.WriteLine($"Nome: {encontrado.getNome()}");
                Console.WriteLine($"Matrícula: {encontrado.getMatricula()}");
                Console.WriteLine($"Cargo: {encontrado.getCargoAtual()}");
                Console.WriteLine($"Salário: R$ {encontrado.getSalarioAtual()}");
            }
            else
            {
                Console.WriteLine($"\nFuncionário com matrícula {matricula} não encontrado.");
            }
        }

        // Atualizar salário (soma um valor ao salário atual)
        public static void atualizarSalario(Funcionario f, float valor)
        {
            f.salarioAtual += valor;
            Console.WriteLine($"\nSalário atualizado do funcionário {f.getNome()}: R$ {f.getSalarioAtual()}");
        }
    }
}












Main








using System;

namespace ConsoleApp
{
    internal class Program
    {
        static void Main()
        {
            Console.WriteLine("--- GESTÃO DE RH ---");

            // Cadastrando
            Funcionario.cadastrar(new Funcionario(123, "Davi", "Adm", 1000f));
            Funcionario.cadastrar(new Funcionario(1234, "Daniel", "TI", 10000f));
            Funcionario.cadastrar(new Funcionario(321, "Maria", "RH", 2000f));

            // Listagem inicial
            Funcionario.listar();

            // Consultar funcionário
            Funcionario.consultar();

            // Atualizar salário
            var f = Funcionario.Funcionarios[0]; // pega o primeiro funcionário só para exemplo
            Funcionario.atualizarSalario(f, 500f);

            // Listar novamente para ver atualização
            Funcionario.listar();
        }
    }
}


