Classe Funcionario






using System;
using System.Text;
using System.Collections.Generic;


namespace ConsoleApp
{
    internal class Funcionario
    {
        public static List<Funcionario> Funcionarios = new List<Funcionario>();


        // Atributos privados
        private int Matricula;
        private string Nome;
        private string cargoAtual;
        private float salarioAtual;


        // Getters estilo Java
        public int getMatricula() { return Matricula; }
        public string getNome() { return Nome; }
        public string getCargoAtual() { return cargoAtual; }
        public float getSalarioAtual() { return salarioAtual; }


        // Setters estilo Java (opcional, pode deixar comentado)
        /*
        public void setMatricula(int matricula) { this.Matricula = matricula; }
        public void setNome(string nome) { this.Nome = nome; }
        public void setCargoAtual(string cargoAtual) { this.cargoAtual = cargoAtual; }
        public void setSalarioAtual(float salarioAtual) { this.salarioAtual = salarioAtual; }
        */


        // Propriedades estilo C#
        public int MatriculaProp => Matricula;
        public string NomeProp => Nome;
        public string CargoAtualProp => cargoAtual;
        public float SalarioAtualProp => salarioAtual;


        // Construtor
        public Funcionario(int matricula, string nome, string cargoAtual, float salarioAtual)
        {
            this.Matricula = matricula;
            this.Nome = nome;
            this.cargoAtual = cargoAtual;
            this.salarioAtual = salarioAtual;
        }


        // Cadastro
        public static bool cadastrar(Funcionario f)
        {
            foreach (var func in Funcionarios)
            {
                if (func.Matricula == f.Matricula)
                {
                    Console.WriteLine($"\nFuncionário com matrícula {f.Matricula} já cadastrado!");
                    return false;
                }
            }
            Funcionarios.Add(f);
            return true;
        }


        // Listagem
        public static void listar()
        {
            Console.WriteLine("\nLista de funcionários cadastrados: \n");


            foreach (var f in Funcionarios)
            {
                // pode usar tanto getters quanto propriedades
                Console.WriteLine($"Nome: {f.getNome()} \nMatrícula: {f.getMatricula()} \nCargo: {f.getCargoAtual()} \nSalário: R$ {f.getSalarioAtual()}");
            }
        }
    }
}














Main








using System;


namespace ConsoleApp
{
    internal class Program
    {
        static void TentaCadastrar(Funcionario f)
        {
            // aqui mostro os dois estilos
            if (Funcionario.cadastrar(f))
            {
                Console.WriteLine($"[C# prop] Funcionário {f.NomeProp} cadastrado com sucesso!");
                Console.WriteLine($"[Java get] Funcionário {f.getNome()} cadastrado com sucesso!");
            }
            else
            {
                Console.WriteLine($"[C# prop] Falha ao cadastrar funcionário {f.NomeProp}: matrícula já existe.");
                Console.WriteLine($"[Java get] Falha ao cadastrar funcionário {f.getNome()}: matrícula já existe.");
            }
        }


        static void Main()
        {
            Console.WriteLine("--- GESTÃO DE RH ---");


            // Cadastrando
            TentaCadastrar(new Funcionario(123, "Davi", "Adm", 1000f));
            TentaCadastrar(new Funcionario(1234, "Daniel", "TI", 10000f));
            TentaCadastrar(new Funcionario(123, "Maria", "RH", 2000f));


            // Listagem
            Funcionario.listar();


            // Exemplo extra: usando getter e propriedade separadamente
            var f1 = new Funcionario(999, "Lucas", "Dev", 5000f);
            Console.WriteLine($"\nExemplo com f1:");
            Console.WriteLine($"Usando propriedade C#: {f1.NomeProp}");
            Console.WriteLine($"Usando getter Java: {f1.getNome()}");
        }
    }
}